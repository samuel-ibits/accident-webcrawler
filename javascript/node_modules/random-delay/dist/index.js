"use strict";var d=Object.create;var o=Object.defineProperty;var c=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var D=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var w=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),b=(r,e)=>{for(var t in e)o(r,t,{get:e[t],enumerable:!0})},m=(r,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let a of h(e))!p.call(r,a)&&a!==t&&o(r,a,{get:()=>e[a],enumerable:!(n=c(e,a))||n.enumerable});return r};var x=(r,e,t)=>(t=r!=null?d(D(r)):{},m(e||!r||!r.__esModule?o(t,"default",{value:r,enumerable:!0}):t,r)),g=r=>m(o({},"__esModule",{value:!0}),r);var y=w((I,s)=>{"use strict";s.exports=function(e){if((e>0&&e<1/0)===!1)throw typeof e!="number"&&typeof e!="bigint"?TypeError("sleep: ms must be a number"):RangeError("sleep: ms must be a number that is greater than 0 but less than Infinity");if(typeof SharedArrayBuffer<"u"&&typeof Atomics<"u"){let n=new Int32Array(new SharedArrayBuffer(4));Atomics.wait(n,0,0,Number(e))}else{let n=Date.now()+Number(e);for(;n>Date.now(););}}});var E={};b(E,{randomDelay:()=>i,randomDelayed:()=>A});module.exports=g(E);var l=x(y()),u={minDelay:0,maxDelay:1e3,method:"async"};function i(r={}){let{minDelay:e,maxDelay:t,method:n}={...u,...r};if(n!=="sync"&&n!=="async")throw new Error("randomDelay method must be 'sync' or 'async'");if(e<0||t<0)throw new Error("randomDelay minDelay and maxDelay must be >= 0");if(e>t)throw new Error("randomDelay minDelay must be <= maxDelay");let a=Math.random()*(t-e)+e;return r.method==="sync"?((0,l.default)(a),!0):new Promise(f=>{setTimeout(f,a).unref()})}function A(r,e=u){return e.method==="sync"?(...t)=>(i(e),r(...t)):async(...t)=>(await i(e),r(...t))}0&&(module.exports={randomDelay,randomDelayed});
