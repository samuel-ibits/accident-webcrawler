for the next link you will write a function like this:const puppeteer = require('puppeteer');

async function scrapePosts() {
  const browser = await puppeteer.launch();
  const page = await browser.newPage();

  // Navigate to the search results page
  await page.goto('your_search_results_page_url');

  // Add code to handle any necessary waiting for page load
  // ...

  // Extract links to each post
  const postLinks = await page.$$eval('.post-link-selector', links => links.map(link => link.href));

  // Loop through post links and extract details
  for (const postLink of postLinks) {
    // Open each post page
    await page.goto(postLink);

    // Add code to handle any necessary waiting for post page load
    // ...

    // Extract details like post date and text
    const postDate = await page.$eval('.post-date-selector', dateElement => dateElement.textContent);
    const postText = await page.$eval('.post-text-selector', textElement => textElement.textContent);

    // Handle or store the extracted details as needed
    console.log('Post Date:', postDate);
    console.log('Post Text:', postText);
  }

  // Close the browser when done
  await browser.close();
}

// Call the function to start scraping
scrapePosts();
because the date and other information we need are on the next page of each result so you fetch the title and link from the search result page and open the link in other get the date and short detail. here is the html strucure:<li>
    <article class="article-short">
        <a href="https://ewn.co.za/2018/10/16/world-food-day-sa-is-food-secure-for-now">
            <div class="">
                <img src="https://cdn.primedia.co.za/primedia-broadcasting/image/upload/c_fill,h_141,q_70,w_225/yi7ktdvmjirtfw4fttro" alt="Picture: Alexandr Podvalny/Unsplash">
            </div>
            <h4>World Food Day: SA is food secure, for now</h4>
            <div class="byline"><abbr class="timeago" title="2018-10-16T14:41:00+0000"></abbr></div>
        </a>
    </article>
</li>  and here is the link for the search: `https://ewn.co.za/SearchResultsPage?searchTerm=${query}` . rewrite this code:    else if (searchBase === "ewn") {
      const generateSearchUrl = (query) => `https://guyanatimesgy.com/?s=${query}`;
    
      `https://ewn.co.za/SearchResultsPage?searchTerm=${query}`
      const searchUrl = generateSearchUrl(query);
    
      const browser = await puppeteer.launch({ headless: true });
      const page = await browser.newPage();
      const userAgent = randomUseragent.getRandom();
    
      await page.setUserAgent(userAgent);
    
      // Increase navigation timeout
      await page.goto(searchUrl, { timeout: 120000 });
    
      // Wait for some time to simulate human-like behavior
      await page.waitForTimeout(randomDelay());
    
      const html = await page.content();
      const $ = cheerio.load(html);
    
      const accidentReports = $(".td_module_16.td_module_wrap.td-animation-stack");
    
      let reports = [];
    
      accidentReports.each((index, element) => {
        const titleElement = $(element).find(".entry-title a");
        const link = titleElement.attr("href");
        const accidentType = titleElement.text();
        const dateElement = $(element).find(".td-post-date time");
        const rawDate = dateElement.attr("datetime");
    
        // Convert the raw date to a human-readable format
        const date = new Date(rawDate).toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' });
    
        // Extract details
        const details = $(element).find(".td-excerpt").text().trim();
    
        // Check if the report's date is within the specified range
        if (isDateInRange(date, startDate, endDate)) {
          // Add 'location: Guyana' property for reports from 'guyana' search base
          reports.push({
            accidentType,
            date,
            details,
            location: "Guyana",
            link,
          });
        }
      });
    
      await browser.close();
    
      return reports;
    } to fit the described fuctionality.